name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
<<<<<<< HEAD
<<<<<<< HEAD
=======
  calculate-version:
    name: Calculate Version
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      # gitversion/execute step omitted for brevity

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.9.7
<<<<<<< HEAD

    display-semver:
      name: Display Semantic Version
      runs-on: ubuntu-latest
      needs: calculate-version
      env:
        SEMVER: ${{ needs.calculate-version.outputs.semVer }}
      steps:
        - name: Display version
          run: |
            echo SemVer: $SEMVER
            
>>>>>>> 7678b56... Updated pipeline
=======
        
  display-semver:
    name: Display Semantic Version
    runs-on: ubuntu-latest
    needs: calculate-version
    env:
      SEMVER: ${{ needs.calculate-version.outputs.semVer }}
    steps:
      - name: Display version
        run: |
          echo SemVer: $SEMVER
          
>>>>>>> b3b48d9... Updated pipeline
=======
>>>>>>> 94018da... Updated pipeline
  build:
    runs-on: ubuntu-latest

    env:
      project: Photino.NET/Photino.NET.csproj
      nugetFolder: ./nuget
      configuration: Debug
      repository: "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

    env:
      project: Photino.NET/Photino.NET.csproj
      nugetFolder: ./nuget
      configuration: Debug
      repository: "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"

    steps:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
=======
    - name: Unshallow Fetch
      run: git fetch --unshallow
          
>>>>>>> 2f800a0... Updated pipeline
    - uses: actions/checkout@v2
=======
=======
    - run: |
<<<<<<< HEAD
<<<<<<< HEAD
        echo $project
        echo $nugetConfig
        echo $nugetFolder
>>>>>>> 297f1be... Added nuget.config
=======
        echo $project, ${{ env.project }}, ${{ env.PROJECT }}
        echo $nugetConfig, ${{ env.nugetConfig }}, ${{ env.NUGET_CONFIG }}
        echo $nugetFolder, ${{ env.nugetFolder }}, ${{ env.NUGET_FOLDER }}
>>>>>>> a1c7500... Added nuget.config
=======
        echo ${{ env.project }}
        echo ${{ env.nugetFolder }}
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 9a8f937... Added nuget.config
=======
        echo ${{ env.token }}
<<<<<<< HEAD
>>>>>>> d8fb974... Added nuget.config
=======

        if [ ${{ env.token }} -eq "" ]
        then
          echo "Empty token." 1>&2
          exit 64
<<<<<<< HEAD
        }
>>>>>>> 6b5847c... Added nuget.config
=======
        fi
>>>>>>> 9e9051c... Added nuget.config
=======
        echo ${{ env.configuration }}

>>>>>>> 880bbb3... Added nuget.config
    - uses: actions/checkout@v2
=======
      - run: |
          echo ${{ env.project }}
          echo ${{ env.nugetFolder }}
          echo ${{ env.configuration }}

=======
>>>>>>> 5d33307... Added nuget.config
      - uses: actions/checkout@v2
>>>>>>> aedab62... Added nuget.config

      - name: Unshallow Fetch
        run: git fetch --unshallow

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> ddc2c3a... Updated pipeline
    - name: Setup .NET
=======
    - name: Setup .NET 3.0.x
>>>>>>> 354462c... Added nuget.config
      uses: actions/setup-dotnet@v1
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        dotnet-version: 3.0.x
        source-url: 'https://nuget.pkg.github.com/sharpninja/index.json'

=======
>>>>>>> b2483a7... Added nuget.config
    - name: Setup .NET 5.0.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
<<<<<<< HEAD
<<<<<<< HEAD
        source-url: 'https://nuget.pkg.github.com/sharpninja/index.json'

    - name: Set API Key
<<<<<<< HEAD
      run: dotnet nuget setApiKey

<<<<<<< HEAD
    - name: Restore dependencies
      run: dotnet restore
<<<<<<< HEAD
    - name: Publish NuGet
      uses: brandedoutcast/publish-nuget@v2
      with:
<<<<<<< HEAD
<<<<<<< HEAD
        PROJECT_FILE_PATH: $GITHUB_WORKSPACE/Photino.NET/Photino.NET.csproj
        NUGET_KEY: ${{ secrets.GITHUB_TOKEN }}
        NUGET_SOURCE: https://nuget.pkg.github.com/$GITHUB_ACTOR/index.json
=======
        PROJECT_FILE_PATH: ${{ env.GITHUB_WORKSPACE }}/Photino.NET/Photino.NET.csproj
        NUGET_KEY: ${{ secrets.GITHUB_TOKEN }}
        NUGET_SOURCE: https://nuget.pkg.github.com/${{ env.GITHUB_ACTOR }}/index.json
>>>>>>> 049eac9... Updated pipeline
=======
        PROJECT_FILE_PATH: Photino.NET/Photino.NET.csproj
        VERSION_STATIC: ${{ steps.gitversion.outputs.nuGetVersion }}
        NUGET_KEY: ${{ secrets.GITHUB_TOKEN }}
        NUGET_SOURCE: https://nuget.pkg.github.com/${{ github.actor }}/index.json
>>>>>>> 40f56d3... Updated pipeline
        INCLUDE_SYMBOLS: true
<<<<<<< HEAD
=======
      - uses: actions/checkout@v2

      - name: Unshallow Fetch
        run: git fetch --unshallow

=======
>>>>>>> aedab62... Added nuget.config
      - name: Setup .NET 5.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x
          source-url: ${{ env.repository }}
        env:
<<<<<<< HEAD
<<<<<<< HEAD
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
<<<<<<< HEAD

      - name: Restore
        run: |
          # Download newest nuget.exe
          nugetPath="/home/runner/nuget.exe"
          curl https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -o $nugetPath 

          chmod +x $nugetPath 

          project=${{ env.project }}

          dotnet restore $project

      - name: Build, Pack and Publish to GitHub
        run: |
          nugetFolder=${{ env.nugetFolder }}
          project=${{ env.project }}
          configuration=${{ env.configuration }}

          mkdir $nugetFolder 

          dotnet pack --configuration $configuration --no-restore --include-symbols --include-source --output $nugetFolder $project

      - name: Push Github
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gpr="Source"
          user="${{ github.repository_owner }}"
          pw="${{ secrets.GITHUB_TOKEN }}"
          source="${{ env.repository }}"

          # Ensure the correct username and token are assigned to Source
          /home/runner/nuget.exe sources Update -Name $gpr -Username $user -Password $pw -StorePasswordInClearText

          for package in $nugetFolder/*.nupkg
          do
              echo "/home/runner/nuget.exe push $package -src $gpr -NoSymbols -SkipDuplicate" 
          
              # Execute the push
              /home/runner/nuget.exe push $package -src $gpr -NoSymbols -SkipDuplicate
          done;
>>>>>>> fb75fc7... Updated pipeline
=======
        NO_BUILD: false
        
>>>>>>> a20b67a... Updated pipeline
=======

    - name: Publish
=======
    - name: Build, Pack and Publish to GitHub
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 22d3d58... Added nuget.config
=======
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
>>>>>>> 0a6fddc... Added nuget.config
=======
>>>>>>> 3579784... Added nuget.config
=======
>>>>>>> 7a7f6f4... Added nuget.config
      run: |
        dotnet nuget sources add -name "GPR" -Source 'https://nuget.pkg.github.com/sharpninja/index.json' -Username sharpninja -Password ${{ secrets.GITHUB_TOKEN }}
#        dotnet new tool-manifest
#        dotnet tool install gpr --local
#        dotnet gpr setApiKey ${{ secrets.GITHUB_TOKEN }} ${{ env.nugetRepository }}
=======
>>>>>>> b2483a7... Added nuget.config

    - name: Build, Pack and Publish to GitHub
      run: |        
        gpr="GPR"
<<<<<<< HEAD
        mkdir ${{ env.nugetFolder }}
<<<<<<< HEAD
<<<<<<< HEAD
        dotnet restore
        dotnet pack --configuration ${{ env.configuration }} --no-restore --include-symbols --include-source --output ${{ env.nugetFolder }} ${{ env.project }}
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    - name: Push Nuget Package
<<<<<<< HEAD
<<<<<<< HEAD
      run: nuget push -Source https://nuget.pkg.github.com/${{ github.actor }}/index.json -ApiKey ${{ secrets.GITHUB_TOKEN }} -NonInteractive   
>>>>>>> 8ccf7c8... Updated pipeline
=======
      run: nuget push ./nuget/*.nupkg ${{ secrets.GITHUB_TOKEN }} -src https://nuget.pkg.github.com/${{ github.actor }}/index.json -NonInteractive   
>>>>>>> c0b89b8... Fixed versions
=======
      run: cd ./nuget; nuget push *.nupkg ${{ secrets.GITHUB_TOKEN }} -src https://nuget.pkg.github.com/${{ github.actor }}/index.json  
>>>>>>> a160791... Fixed versions
=======
#    - name: Push Nuget Package
#      run: cd ./nuget; nuget push *.nupkg ${{ secrets.GITHUB_TOKEN }} -src https://nuget.pkg.github.com/${{ github.actor }}/index.json  
=======
    - name: Set ApiKey
<<<<<<< HEAD
<<<<<<< HEAD
      run: nuget setApiKey ${{ secrets.GITHUB_TOKEN }} -src https://nuget.pkg.github.com/${{ github.actor }}
>>>>>>> 727660c... Fixed versions
=======
      run: nuget setApiKey ${{ secrets.GITHUB_TOKEN }} -src 'github' -ConfigFile ./.github/workflows/nuget.config
>>>>>>> 6b43fa6... Added nuget.config
=======
#    - name: Set ApiKey
#      run: nuget setApiKey ${{ secrets.GITHUB_TOKEN }} -src 'github' -ConfigFile ./.github/workflows/nuget.config
>>>>>>> 6ffceeb... Added nuget.config

    - run: echo ${{secrets.API_KEY}} | sed 's/./& /g'
=======
    - name: Set ApiKey
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      run: nuget setApiKey ${{ secrets.API_KEY }} -src 'https://nuget.pkg.github.com/${{ github.actor }}'
>>>>>>> 4c23ccb... Added nuget.config

    - name: Publish to GitHub
      uses: tanaka-takayoshi/nuget-publish-to-github-packages-action@v2.1
      with:
        nupkg-path:  './nuget/*.nupkg'
        repo-owner:  ${{ github.actor }}
        gh-user:  ${{ github.actor }}
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        token:  ${{ secrets.GITHUB_TOKEN }}
<<<<<<< HEAD
>>>>>>> 79ab20c... Fixed versions
=======
        config-file: './.github/workflows/nuget.config' 
>>>>>>> 6b43fa6... Added nuget.config
=======
        token:  ${{ secrets.API_TOKEN }}
        config-file: './.github/workflows/nuget.config' 
>>>>>>> 6ffceeb... Added nuget.config
=======
        token:  ${{ secrets.API_TOKEN }}
>>>>>>> c5ee93b... Added nuget.config
=======
        token:  ${{ secrets.ApiToken }}
        
>>>>>>> 1dfbee4... Added nuget.config
=======
        token:  ${{ secrets.API_KEY }}
        
>>>>>>> d5f0063... Added nuget.config
=======
      run: nuget setApiKey ${{ secrets.API_KEY }} -src 'github' -ConfigFile ./.github/workflows/nuget.config
=======
      run: nuget setApiKey ${{ secrets.GITHUB_TOKEN }} -src 'github' -ConfigFile ./.github/workflows/nuget.config
>>>>>>> d6ba5c9... Added nuget.config
=======
      run: nuget setApiKey ${{ secrets.API_KEY }} -src 'github' -ConfigFile ./.github/workflows/nuget.config
>>>>>>> 7908940... Added nuget.config
=======
      run: nuget setApiKey ${{ secrets.GITHUBACTIONS }} -src 'github' -ConfigFile ./.github/workflows/nuget.config
>>>>>>> 5eb6fed... Added nuget.config
      
=======
>>>>>>> 9b84c2f... Added nuget.config
    - name: Publish
      run: |
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        sed -i 's/\$GITHUBACTIONS/${{ secrets.GITHUBACTIONS }}/g' ./.github/workflows/nuget.config
        more ./.github/workflows/nuget.config
        cd ./nuget
        nuget push *.nupkg -src 'github' -ConfigFile ../.github/workflows/nuget.config

#    - name: Publish to GitHub
#      uses: tanaka-takayoshi/nuget-publish-to-github-packages-action@v2.1
#      with:
#        nupkg-path:  './nuget/*.nupkg'
#        repo-owner:  ${{ github.actor }}
#        gh-user:  ${{ github.actor }}
#        token:  ${{ secrets.API_KEY }}
        
>>>>>>> 9c21b78... Added nuget.config
=======
        sed -i 's/\$GITHUBACTIONS/${{ secrets.GITUHUB_TOKEN }}/g' $nugetConfig
        nuget push $nugetFolder/*.nupkg -src 'github' -ConfigFile $nugetConfig
        
>>>>>>> 297f1be... Added nuget.config
=======
        sed -i 's/\$GITHUBACTIONS/${{ secrets.GITUHUB_TOKEN }}/g' ${{ env.nugetConfig }}
=======
        sed -i 's/\$GITHUBACTIONS/${{ env.token }}/g' ${{ env.nugetConfig }}
>>>>>>> d8fb974... Added nuget.config
=======
        sed -i 's/\$GITHUBACTIONS/${{ env.token }}/g' ${{ env.nugetConfig }}
<<<<<<< HEAD
        nuget setApiKey ${{ env.token }} -src 'github' -ConfigFile  ${{ env.nugetConfig }}  
>>>>>>> d98dae0... Added nuget.config
        nuget push ${{ env.nugetFolder }}/*.nupkg -src 'github' -ConfigFile ${{ env.nugetConfig }}
        
>>>>>>> 9a8f937... Added nuget.config
=======
        nuget setApiKey ${{ env.token }} -src ${{ env.nugetRepository }}  
        nuget push ${{ env.nugetFolder }}/*.nupkg -src ${{ env.nugetRepository }}
        
>>>>>>> 73c5754... Added nuget.config
=======
        nuget source Add -Name "GitHub" -Source ${{ env.nugetRepository }}
        nuget setApiKey ${{ env.token }} -src ${{ env.nugetRepository }}  
        nuget push ${{ env.nugetFolder }}/*.nupkg -src "GitHub"
        
>>>>>>> 22d3d58... Added nuget.config
=======
        dotnet nuget push ${{ env.nugetFolder }}/*.nupkg --api-key ${{ env.token }} --source ${{ env.nugetRepository }}
=======
        dotnet restore ${{ env.project }}
<<<<<<< HEAD
<<<<<<< HEAD
        package = dotnet pack --configuration ${{ env.configuration }} --no-restore --output ${{ env.nugetFolder }} ${{ env.project }}
        echo $package
        dotnet nuget push $package --api-key ${{ env.token }} --source ${{ env.nugetRepository }}
>>>>>>> edc85ca... Added nuget.config
=======
        PACKAGE=$(dotnet pack --configuration ${{ env.configuration }} --no-restore --output ${{ env.nugetFolder }} ${{ env.project }})
        echo ${PACKAGE}
        dotnet nuget push ${PACKAGE} --api-key ${{ env.token }} --source ${{ env.nugetRepository }}
>>>>>>> c0be07f... Added nuget.config
=======
        dotnet pack --configuration ${{ env.configuration }} --no-restore --output ${{ env.nugetFolder }} ${{ env.project }}
=======
=======
        user="sharpninja"
=======
        source-url: ${{ env.repository }}
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Build, Pack and Publish to GitHub
      run: |        
        gpr="GPR"
        user="${{ github.repository_owner }}"
>>>>>>> 12b3ca3... Added nuget.config
        pw="${{ secrets.GITHUB_TOKEN }}"
        source="${{ env.repository }}"
        nugetFolder=${{ env.nugetFolder }}
        project=${{ env.project }}
        configuration=${{ env.configuration }}

        mkdir $nugetFolder 
>>>>>>> 7e63d8f... Added nuget.config
        
        dotnet restore $project 
        
        dotnet pack --configuration $configuration --no-restore --include-symbols --include-source --output $nugetFolder $project
        
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
        ls -l ${{ env.nugetFolder }} 
>>>>>>> db62ded... Added nuget.config
=======
        ls -l $nugetFolder 
>>>>>>> 7e63d8f... Added nuget.config

        for $package in $nugetFolder/*.nupkg
=======
        for package in $nugetFolder/*.nupkg
>>>>>>> f3b4a50... Added nuget.config
        do
          echo $package
          curl -vX PUT -u "$user:$pw" -F package=@$package $source;
        done;
=======
#        for package in $nugetFolder/*.nupkg
#        do
#          echo $package
#          curl -vX PUT -u "$user:$pw" -F package=@$package $source;
#        done;
    
=======
>>>>>>> ef632ab... Added nuget.config
    - name: PushGithub
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
<<<<<<< HEAD
>>>>>>> 12b3ca3... Added nuget.config
#        dotnet nuget add source $source -n $gpr -u $user -p $pw --store-password-in-clear-text
#        dotnet nuget push $nugetFolder/*.nupkg -s $gpr -d --skip-duplicate

        
#        dotnet gpr push ${{ env.nugetFolder }}/*.nupkg
        
#        dotnet nuget push ${{ env.nugetFolder }}/*.nupkg --skip-duplicate --no-symbols true
        
>>>>>>> c782510... Added nuget.config
#        nuget source Add -Name "GitHub" -Source ${{ env.nugetRepository }}
#        nuget setApiKey ${{ env.token }} -src ${{ env.nugetRepository }}  
#        nuget push ${{ env.nugetFolder }}/*.nupkg -src "GitHub"
        
>>>>>>> a478029... Added nuget.config
=======
      run: |
        curl -o nuget.deb http://archive.ubuntu.com/ubuntu/pool/universe/n/nuget/nuget_2.8.7+md510+dhx1-1_all.deb
        ar x {nuget.deb}
        tar xvf control.tar.gz
        tar data.tar.gz
        ls -al
=======
=======
          NUGET_AUTH_TOKEN: ${{ secrets.API_KEY }}
>>>>>>> 2bc0979... Added nuget.config
=======
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
>>>>>>> 607ac3c... Added nuget.config

      - name: Restore
        run: |
          # Download newest nuget.exe
          nugetPath="/home/runner/nuget.exe"
          curl https://dist.nuget.org/win-x86-commandline/latest/nuget.exe -o $nugetPath 

          chmod +x $nugetPath 

          project=${{ env.project }}

          dotnet restore $project

      - name: Build, Pack and Publish to GitHub
        run: |
          nugetFolder=${{ env.nugetFolder }}
          project=${{ env.project }}
          configuration=${{ env.configuration }}

          mkdir $nugetFolder 

          dotnet pack --configuration $configuration --no-restore --include-symbols --include-source --output $nugetFolder $project

      - name: Push Github
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gpr="Source"
          user="${{ github.repository_owner }}"
          pw="${{ secrets.GITHUB_TOKEN }}"
          source="${{ env.repository }}"

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          nugetDir="/home/runner/nuget"          
          nuget="$nugetDir/NuGet.CommandLine.XPlat.dll"

<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          ./nuget.exe push ${{ env.nugetFolder }}/*.nupkg --no-symbols --skip-duplicate
>>>>>>> aedab62... Added nuget.config
=======
          dotnet NuGet.CommandLine.XPlat.dll push ${{ env.nugetFolder }}/*.nupkg --no-symbols --skip-duplicate
>>>>>>> f8a3133... Added nuget.config
=======
#          dotnet NuGet.CommandLine.XPlat.dll push ${{ env.nugetFolder }}/*.nupkg --no-symbols --skip-duplicate
>>>>>>> 05ccfd0... Added nuget.config
=======
=======
          dotnet $nuget setApiKey ${{ secrets.GITHUB_TOKEN }} -s ${{ env.repository }} 
>>>>>>> 4321aa1... Added nuget.config
          dotnet $nuget push ${{ env.nugetFolder }}/*.nupkg --no-symbols --skip-duplicate
>>>>>>> 86a589f... Added nuget.config

#        dpkg-deb -xv {$deb} {.}
=======
          bash -c $nugetPath setApiKey ${{ secrets.GITHUB_TOKEN }} -s ${{ env.repository }}
          bash -c $nugetPath push ${{ env.nugetFolder }}/*.nupkg -NoSymbols -SkipDuplicate 
>>>>>>> d9d2f7a... Added nuget.config
=======
          setApi="$nugetPath setApiKey ${{ secrets.GITHUB_TOKEN }} -s ${{ env.repository }}"
          push="$nugetPath push ${{ env.nugetFolder }}/*.nupkg -NoSymbols -SkipDuplicate"
=======
          setApi="$nugetPath setApiKey ${{ secrets.GITHUB_TOKEN }} -src ${{ env.repository }}"
          push="$nugetPath push ${{ env.nugetFolder }}/*.nupkg ${{ secrets.GITHUB_TOKEN }} -NoSymbols -SkipDuplicate"
>>>>>>> 45b8833... Added nuget.config

          echo $setApi          
          bash -c $setApi
          
          echo $push
          bash -c $push
>>>>>>> 871889d... Added nuget.config
=======
          /home/runner/nuget.exe setApiKey ${{ secrets.GITHUB_TOKEN }} -src ${{ env.repository }}
<<<<<<< HEAD
<<<<<<< HEAD
          /home/runner/nuget.exe push ${{ env.nugetFolder }}/*.nupkg ${{ secrets.GITHUB_TOKEN }} -NoSymbols -SkipDuplicate
>>>>>>> 06bd34a... Added nuget.config
=======
          /home/runner/nuget.exe push ${{ env.nugetFolder }}/*.nupkg ${{ secrets.GITHUB_TOKEN }} -src ${{ env.repository }} -NoSymbols -SkipDuplicate
>>>>>>> 9b25af0... Added nuget.config

#        for package in $nugetFolder/*.nupkg
#        do
#          echo $package
#          curl -vX PUT -u "$user:$pw" -F package=@$package $source;
#        done;
<<<<<<< HEAD
    
>>>>>>> ef632ab... Added nuget.config
=======
=======
=======
          /home/runner/nuget.exe sources add -Name $gpr -Username $user -Password $pw -src $source -StorePasswordInClearText
>>>>>>> 2bc0979... Added nuget.config
=======
=======
          /home/runner/nuget.exe sources
          
>>>>>>> d5bee19... Added nuget.config
=======
>>>>>>> 48d56d1... Added nuget.config
          /home/runner/nuget.exe sources Update -Name $gpr -Username $user -Password $pw -src $source -StorePasswordInClearText
>>>>>>> 9b41e20... Added nuget.config
=======
          # Ensure the correct username and token are assigned to Source
          /home/runner/nuget.exe sources Update -Name $gpr -Username $user -Password $pw -StorePasswordInClearText
>>>>>>> 5d33307... Added nuget.config

          for package in $nugetFolder/*.nupkg
          do
              echo "/home/runner/nuget.exe push $package -src $gpr -NoSymbols -SkipDuplicate" 
          
              # Execute the push
              /home/runner/nuget.exe push $package -src $gpr -NoSymbols -SkipDuplicate
          done;
<<<<<<< HEAD
>>>>>>> fc22b88... Added nuget.config

#               nugetDir="/home/runner/nuget"
#
#               mkdir $nugetDir
#               cp -r /home/runner/.nuget/packages/nuget.commandline.xplat/5.9.0/lib/net5.0/* $nugetDir/
#               cp -r /home/runner/.nuget/packages/nuget.commands/5.9.0/lib/net5.0/* $nugetDir/
#               cp -r /home/runner/.nuget/packages/nuget.protocol/5.9.0/lib/net5.0/* $nugetDir/
#               cp -r /home/runner/.nuget/packages/nuget.packaging/5.9.0/lib/net5.0/* $nugetDir/
#               cp -r /home/runner/.nuget/packages/nuget.versioning/5.9.0/lib/netstandard2.0/* $nugetDir/
#               cp -r /home/runner/.nuget/packages/nuget.common/5.9.0/lib/netstandard2.0/* $nugetDir/
#               cp -r /home/runner/.nuget/packages/nuget.configuration/5.9.0/lib/netstandard2.0/* $nugetDir/
#
#               cp -r /home/runner/.nuget/packages/nuget.credentials/5.9.0/lib/net5.0/* $nugetDir/
#               cp -r /home/runner/.nuget/packages/nuget.dependencyresolver.core/5.9.0/lib/net5.0/* $nugetDir/
#               cp -r /home/runner/.nuget/packages/nuget.frameworks/5.9.0/lib/netstandard2.0/* $nugetDir/
#               cp -r /home/runner/.nuget/packages/nuget.librarymodel/5.9.0/lib/netstandard2.0/* $nugetDir/
#               cp -r /home/runner/.nuget/packages/nuget.projectmodel/5.9.0/lib/net5.0/* $nugetDir/
#
#               cp -r /home/runner/.nuget/packages/newtonsoft.json/9.0.1/lib/netstandard1.0/* $nugetDir/
#               cp -r /home/runner/.nuget/packages/microsoft.extensions.commandlineutils/1.1.1/lib/netstandard1.3/* $nugetDir/
#               cp -r /home/runner/.nuget/packages/netstandard.library/2.0.3/build/netstandard2.0/ref/* $nugetDir/
>>>>>>> d9d2f7a... Added nuget.config
=======
>>>>>>> 5d33307... Added nuget.config
